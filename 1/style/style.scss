*,
*::before,
*::after {
    box-sizing: inherit;
}
//Vars
:root {
    --rad: 0.7rem;
    --dur: 0.3s;
    --color-dark: #f49f9f;
    --color-light: #fff;
    --color-brand: #ce63cc;
    --font-fam: "Lato", sans-serif;
    --height: 5rem;
    --btn-width: 6rem;
    --bez: cubic-bezier(0, 0, 0.43, 1.49);
}

// Setup
body {
    background: var(--color-dark);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
}
html {
    box-sizing: border-box;
    height: 100%;
    font-size: 10px;
}

// Main styles
form {
    position: absolute;
    top: 350px;
    left: 600px;

    background: var(--color-brand);
    border-radius: var(--rad);
}
input,
button {
    position: absolute;
    z-index: 1000;
    height: var(--height);
    font-family: var(--font-fam);
    border: 0;
    color: var(--color-dark);
    font-size: 1.8rem;
}
input[type="search"] {
    outline: 0; // <-- shold probably remove this for better accessibility, adding for demo aesthetics for now.
    width: 100%;
    background: var(--color-light);
    padding: 0 1.6rem;
    border-radius: var(--rad);
    appearance: none; //for iOS input[type="search"] roundedness issue. border-radius alone doesn't work
    transition: all var(--dur) var(--bez);
    transition-property: width, border-radius;
    z-index: 1;
    position: relative;
}
button {
    display: none; // prevent being able to tab to it
    position: absolute;
    top: 0;
    right: 0;
    width: var(--btn-width);
    font-weight: bold;
    background: var(--color-brand);
    border-radius: 0 var(--rad) var(--rad) 0;
}
input:not(:placeholder-shown) {
    border-radius: var(--rad) 0 0 var(--rad);
    width: calc(100% - var(--btn-width));
    + button {
        display: block;
    }
}
label {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0;
    border: 0;
    height: 1px;
    width: 1px;
    overflow: hidden;
}
.gif {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
.wrapper {
    display: flex;
    flex-direction: column;
}
